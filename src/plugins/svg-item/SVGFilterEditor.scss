
.elf--svg-filter-editor {

  color: var(--elf--font-color);
  display: grid;
  grid-template-columns: 150px 1fr 200px;
  grid-column-gap:10px;
  height: 100%;
  position: relative;

  .tab > .tab-header {
    height: 30px;
  }


  .label {
    height: 20px;
    margin-top: 2px;
    label {
      padding-left: 5px;
      vertical-align: middle;

    }
  }

  .tools {
      vertical-align: middle;
      text-align: right;
      float:right;

      select {
        width: 100px !important;
        display: inline-block ;
      }
  }

  .left {
    height: 100%;
    position: relative;

    .filter-item-list {
      padding: 10px 5px;
      height: 100%;
      overflow: auto;
      .group {
        margin-bottom: 6px;

        &:before {
          content: attr(label);
          display: block; 
          color: var(--elf--selected-color);
        }

        .item {
          padding-left: 10px;
          cursor: pointer;
          padding: 2px 10px;
          vertical-align: middle;
          color: var(--elf--font-color);

          svg {
            width: 20px;
            height: 20px;
          }

          &[value="SourceGraphic"],
          &[value="BackgroundImage"], 
          &[value="FillPaint"]
          {
            color: var(--elf--selected-color);
          }

          &:hover {
            background-color: rgba(255, 255, 255, 0.3);
          }
        }
      }
    }

  }


  $theme-colors: (
    "graphic" : #a6a6ff,
    'source': yellowgreen,
    'modifier': var(--elf--selected-color),
    'lighting': #e6ff00,
    'combiner': #ff9bff
  );          


  .center {
    position: relative;
    overflow: auto;
    .graph {
      overflow: auto; 
      box-sizing: border-box;
      border: 1px solid var(--elf--selected-color);
      position: relative;
      height: 100%;

      .connected-line-panel {
        width: 1000px;
        height: 1000px;
        position: absolute;
        left:0px;
        top:0px;

        svg {
          width: 100%;
          height: 100%;


          path {
            fill: transparent;
            stroke: var(--elf--selected-color);
            stroke-width: 1;
            pointer-events: none;            


            @each $type, $color in $theme-colors {

              &[data-source-type="#{$type}"] {
                stroke: $color; 
              }
            }              
          }          

          circle {
            fill: var(--elf--selected-color);
            r: 4;
            stroke: rgba(var(--elf--selected-color),  0.5);
            stroke-width:0;
            pointer-events: all;
            cursor: pointer;

            @each $type, $color in $theme-colors {
              &[data-source-type="#{$type}"] {
                fill: $color; 
                stroke: rgba($color,  0.5);              
              }
            }          

            &:hover {
              stroke-width: 4;
            }
          }
        }
      }

      .drag-line-panel {
        width: 1000px;
        height: 1000px;
        position: absolute;
        left:0px;
        top:0px;
        // pointer-events: none;

        svg {
          width: 100%;
          height: 100%;

          path {
            stroke: var(--elf--selected-color);
            stroke-width: 1;            
          }
        }
      }

      .graph-panel {
        width: 1000px;
        height: 1000px;
        position: relative;
        pointer-events: none; 

        .filter-node {
          display: inline-block;
          position: absolute;
          left: 10px;
          top: 10px;
          width: 40px;
          height: 40px;
          background-color: var(--elf--background-color); 
          border-radius: 10px;
          pointer-events: all;
          cursor: pointer;

          &[data-type="SourceGraphic"],
          &[data-type="SourceAlpha"],
          &[data-type="BackgroundImage"],
          &[data-type="BackgroundAlpha"],
          &[data-type="FillPaint"],
          &[data-type="StrokePaint"],
          &[data-type="Flood"],
          &[data-type="Turbulence"],
          &[data-type="Image"] {
            border-radius: 0px;
          }

          &[data-type='PointLight'],
          &[data-type='SpotLight'],
          &[data-type='DistantLight'] {
            .out {
              background-color: rgb(248, 229, 121);
              svg {
                display: none; 
              }
            }
          }

          > .label {
            position: absolute;
            bottom: 100%;
            display: inline-block;
            left: 50%;
            transform: translateX(-50%);
            color: var(--elf--font-color);
          }

          > .remove {
            position: absolute;
            top: -6px;
            display: inline-block;
            left: 50%;
            transform: translateX(-50%);
            color: var(--elf--font-color);
            height: 12px;
            width: 12px;
            border-radius: 100%;
            background-color: var(--elf--selected-color);

            svg {
              width: 100%;
              height: 100%;
              path,use,circle,rect,polygon,line,polyline,ellipse,text  {
                fill: currentColor
              }
            }
          }          

          > .preview {
            height: 100%;
            width: 100%;
            pointer-events: none; 
            position: relative;

            &[data-filter-type='Merge'],
            &[data-filter-type='Composite'] {
              svg {
                transform: translate(-50%, -50%) rotate(90deg);
              }
            }

            @each $type, $color in $theme-colors {
              &[data-source-type="#{$type}"] {
                color: $color; 
              }
            }  
            
            &[data-source-type='lighting'] {
              svg {
                filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.3));
              }
            }

            svg {
              display: block;
              width: 30px;
              height: 30px;
              position: absolute;
              left:50%;
              top: 50%;
              transform: translate(-50%, -50%);

              path,use,polygon,line,polyline,ellipse,text  {
                fill: currentColor;
              }
            }
          }

          .in-list {
            position: absolute;            
            top: 50%;
            width: 14px;
            left: -14px;
            transform: translateY(-50%);
            display: inline-block;
          }

          .in {
            width: 14px;
            height: 12px;
            display: block; 
            background-color: rgb(0, 153, 255); 
            border-top-left-radius: 50%;
            border-bottom-left-radius: 50%;
            margin: 2px 0px;
            position: relative;

            &:before {
              content:  '';
              position: absolute;
              display: block;
              width: 8px;
              height: 8px;
              background-color: rgba(white, 0.8);
              border-radius: 100%;
              top: 50%;
              left:3px;
              transform: translateY(-50%); 
            }
          }

          .out {
            position: absolute;            
            width: 12px;
            height: 12px;
            right: -12px;
            top: 50%;
            transform: translateY(-50%);
            background-color: rgb(0, 153, 255); 
            border-top-right-radius: 50%;
            border-bottom-right-radius: 50%;
          }    
          
          .light {
            position: absolute;            
            width: 30px;
            height: 15px;
            left: 50%;
            bottom: -15px;
            transform: translateX(-50%);
            background-color: rgb(248, 229, 121); 
            border-bottom-left-radius: 100%;
            border-bottom-right-radius: 100%;
          }              
          
          .in,.out {
            color: white; 

            svg {
              pointer-events: none;
              width: 14px;
              height: 24px;
              position: absolute;
              top: 50%;
              transform: translateX(-50%) translateY(-50%);
            }
          }

          .in {
            svg {
              left:  6px;
            }
          }

          .out {
            svg {
              left: 7px;
            }
          }

          box-shadow: 0 0 0 1.5px rgba(0, 0, 0, 0.3), 0 0 0 3px #777777;
          &.selected {
            box-shadow: 0 0 0 1.5px rgba(0, 0, 0, 0.3), 0 0 0 3px var(--elf--selected-color);
          }
        }
      }

    }
  }

  .right {
    height: 100%;
    overflow: auto; 
    box-sizing: border-box;
  }

  .filter-list {
    width: 100%;
    display: grid !important;
    grid-template-columns: 1fr !important;
  
    .filter-item {
      display: block;
      
  
      .title {
        display: grid;
        grid-template-columns: 1fr 30px;
        margin-left: -20px;
        color: var(--elf--selected-color);
        border-radius: 3px;
        margin: 5px 0px;

        label {
          padding: 2px 0px;
          
        }
  
        .filter-menu {
          text-align: right;
          color: var(--elf--selected-font-color); 
        }
      }
  
      .filter-ui {
        display: grid;
        grid-template-columns: 1fr;
        margin-bottom: 2px;

        > div {
          margin-bottom: 5px;

          .elf--number-range-editor.has-label,
          .elf--select-editor.has-label,
          .elf--text-editor.has-label
          {
            grid-template-columns: 100px 1fr;
          }

          .elf--color-view-editor.has-label
          {
            grid-template-columns: 100px 24px 1fr;
          }          
        }
  
        &.drop-shadow {
          grid-template-columns: 50px  1fr;
          grid-column-gap: 1px;
        }
  
        &.drop-shadow-color {
          grid-template-columns: 50px 1fr;
          grid-column-gap: 2px;
        }

        input[type="range"] {
          width: 90%;
        }
      }
    }
  }
  
}
