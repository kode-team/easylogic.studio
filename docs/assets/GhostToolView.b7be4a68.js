import{E as O,e as r,S as d,f as y,g as L,L as h,t as p,h as w,v as D,F as V,i as R,j as v,s as F,k as m,D as A,l as M,p as S,A as T,J as $}from"./index.89d53d33.js";const f=.5;class X extends O{template(){return r("div",{class:"elf--ghost-tool-view"},r("div",{ref:"$containerView"}),r("div",{ref:"$view"}))}[d("startGhostToolView")](t){const e=this.$selection.verties;this.isLayoutItem=this.$selection.isLayoutItem,this.verties=y(e),this.ghostVerties=y(e),this.ghostScreenVerties=this.$viewport.applyVerties(this.ghostVerties),this.initMousePoint=this.$viewport.getWorldPosition(),this.filteredLayers=this.$selection.notSelectedLayers,this.containerList=this.filteredLayers.filter(i=>i.hasLayout()||i.is("artboard")).map(i=>i.originVerties),this.$config.set("set.move.control.point",!0)}collectInformation(){var a;const t=this.$viewport.getWorldPosition(),e=this.getDist();this.ghostVerties=this.verties.map(o=>L([],o,e)),this.ghostScreenVerties=this.$viewport.applyVerties(this.ghostVerties);const i=this.$selection.filteredLayers.filter(o=>this.$selection.check(o)===!1);this.targetItem=i[0],this.targetItem?(this.targetItem.hasLayout()&&((a=this.targetItem)==null?void 0:a.hasChildren())&&(this.targetItem.isLayout(h.FLEX)?this.targetItem=this.targetItem.layers[this.targetItem.layers.length-1]:this.targetItem.isLayout(h.GRID)),this.$selection.updateDragTargetItem(this.targetItem),this.targetOriginPosition=this.$viewport.applyVerties(p(this.targetItem.contentVerties)),this.targetPoint=this.$viewport.applyVertex(t),this.targetRelativeMousePoint={x:(this.targetPoint[0]-this.targetOriginPosition[0][0])/(this.targetOriginPosition[1][0]-this.targetOriginPosition[0][0]),y:(this.targetPoint[1]-this.targetOriginPosition[0][1])/(this.targetOriginPosition[3][1]-this.targetOriginPosition[0][1])},this.targetItem.isLayoutItem()?(this.targetParent=this.targetItem.parent,this.targetParent&&(this.targetParentPosition=this.$viewport.applyVerties(this.targetParent.contentVerties))):(this.targetParent=null,this.targetParentPosition=null)):(this.targetPoint=null,this.targetRelativeMousePoint=null,this.targetParent=null,this.targetParentPosition=null)}[d("moveFirstGhostToolView")](){this.collectInformation(),this.load("$containerView"),this.load("$view")}[d("moveGhostToolView")](){this.collectInformation(),this.load("$view")}[w("$containerView")](){var t;return this.ghostVerties?r("svg",null,(t=this.containerList)==null?void 0:t.map(e=>(e=this.$viewport.applyVerties(e),r("path",{class:"container",d:`
                    M ${e[0][0]} ${e[0][1]}
                    L ${e[1][0]} ${e[1][1]}
                    L ${e[2][0]} ${e[2][1]}
                    L ${e[3][0]} ${e[3][1]}
                    Z
                `})))):r("svg",null)}renderPathForVerties(t,e){if(!t)return r("g",null);const i=D(t);return r("g",null,r("path",{class:e,d:i}))}renderPath(t,e,i=e){if(!t)return"";t=i==="ghost"?t:p(t);const a=t[0][0],o=e==="flex-item"?t[2][1]+10:t[0][1]-10;return r("g",null,r("text",{x:a,y:o,"font-size":8},i),this.renderPathForVerties(t,e))}renderLayoutFlexRowArea(){return this.targetRelativeMousePoint.x<f?r(V,null,this.renderPathForVerties([this.targetOriginPosition[0],this.targetOriginPosition[3]],"flex-target")):r(V,null,this.renderPathForVerties([this.targetOriginPosition[1],this.targetOriginPosition[2]],"flex-target"))}renderLayoutFlexForFirstItem(t){const e=t===m.COLUMN,i=e?"align-items":"justify-content",a=e?T:$,o=e?"justify-content":"align-items",n=e?$:T,s=R(this.targetOriginPosition),P=this.ghostScreenVerties[4],c=v(this.ghostScreenVerties[0],this.ghostScreenVerties[1]),u=v(this.ghostScreenVerties[0],this.ghostScreenVerties[3]);let l=c/2,g=u/2;switch(this.targetItem[i]){case a.FLEX_START:l=s.x+c/2;break;case a.CENTER:case a.SPACE_BETWEEN:case a.SPACE_AROUND:l=s.x+s.width/2;break;case a.FLEX_END:l=s.x+s.width-c/2;break}switch(this.targetItem[o]){case n.FLEX_START:g=s.y+u/2;break;case n.CENTER:case n.SPACE_BETWEEN:case n.SPACE_AROUND:g=s.y+s.height/2;break;case n.FLEX_END:g=s.y+s.height-u/2;break}const E=F([],[l,g,0],P),x=this.ghostScreenVerties.map(I=>L([],I,E)).filter((I,C)=>C<4);return this.renderPathForVerties(x,"flex-item","ghost")}renderLayoutFlexColumnArea(){return this.targetRelativeMousePoint.y<0?"":this.targetRelativeMousePoint.y<f?this.renderPathForVerties([this.targetOriginPosition[0],this.targetOriginPosition[1]],"flex-target"):this.renderPathForVerties([this.targetOriginPosition[2],this.targetOriginPosition[3]],"flex-target")}renderLayoutItemInsertArea(){if(!!this.targetParent){if(this.targetParent.hasLayout())if(this.targetParent.isLayout(h.FLEX))switch(this.targetParent["flex-direction"]){case m.ROW:return this.renderLayoutFlexRowArea();case m.COLUMN:return this.renderLayoutFlexColumnArea()}else this.targetParent.isLayout(h.GRID);return r("path",{class:"insert-area",d:`

        `})}}renderLayoutItemForFirst(){var t;if(((t=this.targetItem)==null?void 0:t.hasChildren())===!1){if(this.targetItem.isLayout(h.FLEX))return this.renderLayoutFlexForFirstItem(this.targetItem["flex-direction"]);this.targetItem.isLayout(h.GRID)}return r("path",{class:"insert-area",d:`

        `})}[w("$view")+A](){var i;const t=this.$selection.current;if(!this.ghostVerties||!t)return r("svg",null);const e=((i=this.targetItem)==null?void 0:i.id)!==t.id;return r("svg",null,this.targetParent&&this.renderPathForVerties(this.targetParentPosition,"target-parent"),e&&this.renderPathForVerties(this.targetOriginPosition,"target",""),e&&this.renderPathForVerties(this.targetOriginPosition,"target-rect",""),e&&this.renderLayoutItemInsertArea(),e&&this.renderLayoutItemForFirst(),this.isLayoutItem&&this.renderPathForVerties(this.ghostScreenVerties.filter((a,o)=>o<4),"ghost"))}initializeGhostView(){this.isLayoutItem=!1,this.ghostVerties=void 0,this.ghostScreenVerties=void 0,this.targetOriginPosition=void 0,this.targetOriginPosition=void 0,this.targetRelativeMousePoint=void 0,this.targetItem=void 0,this.targetParent=void 0,this.targetParentPosition=void 0,this.$selection.updateDragTargetItem(this.targetItem)}getDist(){const t=this.$viewport.getWorldPosition();return M([],F([],t,this.initMousePoint))}insertToBackground(){const t=this.$selection.current,e=this.getDist();t.isLayoutItem()!==!1&&this.command("moveLayerToTarget","change target with move",t,this.$selection.currentProject,e,"appendChild")}getTargetAction(){let t="";if(this.targetParent.hasLayout()&&this.targetParent.isLayout(h.FLEX))switch(this.targetParent["flex-direction"]){case m.ROW:this.targetRelativeMousePoint.x<f?t="appendBefore":t="appendAfter";break;case m.COLUMN:this.targetRelativeMousePoint.y<f?t="appendBefore":t="appendAfter";break}return t}insertToLayoutItem(){const t=this.$selection.current,e=this.getDist();if(this.targetParent.hasLayout()){let i=this.getTargetAction();this.targetParent.isLayout(h.FLEX)?i&&this.command("moveLayerToTarget","change target with move",t,this.targetItem,e,i):this.targetParent.isLayout(h.GRID)}}insertToGridItem(){const t=this.$selection.current,{info:e,items:i}=this.$selection.gridInformation||{items:[]},a=this.ghostVerties.filter((n,s)=>s<4),o=i==null?void 0:i.filter(n=>S(n.originVerties,a));if(o.length){const n=o.map(g=>g.column),s=o.map(g=>g.row),P=Math.min(...n),c=Math.min(...s),u=Math.max(...n)+1,l=Math.max(...s)+1;this.command("setAttributeForMulti","change grid item",this.$selection.packByValue({"grid-column-start":P,"grid-column-end":u,"grid-row-start":c,"grid-row-end":l})),this.targetItem.hasChild(t.id)===!1&&this.command("moveLayerToTarget","change target with move",t,this.targetItem,0,"appendChild");return}else this.targetItem&&(this.emit("refreshGridToolInfo",this.targetItem),this.command("moveLayerToTarget","change target with move",t,this.targetItem,0,"appendChild"))}updateLayer(){var i;const t=this.$selection.current;if(!t)return;const e=this.getDist();if(!(e[0]===0&&e[1]===0)&&!(this.targetItem&&this.targetItem.id===(t==null?void 0:t.id))){if(!this.targetItem){this.insertToBackground();return}if(this.targetItem.hasLayout()){if(((i=this.targetItem)==null?void 0:i.hasChildren())===!1&&this.targetItem.isLayout(h.FLEX)){this.command("moveLayerToTarget","change target with move",t,this.targetItem,e,"appendChild");return}else if(this.targetItem.isLayout(h.GRID)){this.insertToGridItem();return}}if(this.targetParent){this.insertToLayoutItem();return}t.isLayoutItem()&&t.parent.id!==this.targetItem.id&&this.command("moveLayerToTarget","change target with move",t,this.targetItem,e,"appendChild")}}[d("endGhostToolView")](t=!1){t&&this.updateLayer(),this.initializeGhostView(),this.load()}}export{X as default};
